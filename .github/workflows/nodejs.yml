# For details of what checks are run for PRs please refer below
# docs: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: Node CI

on:
  push:
    branches: ["master", "1.0-dev" ]
  pull_request:
  workflow_dispatch:

env:
  PACK_DIR: pack
  DIST_DIR: dist
  REPORTS_DIR: CI_reports
  NODE_ACTIVE_LTS: "16"  # https://nodejs.org/en/about/releases/

jobs:
  build:
    name: build
    runs-on: "ubuntu-latest"
    timeout-minutes: 10
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v3
      - name: Setup Node.js ${{ env.NODE_ACTIVE_LTS }}
        # see https://github.com/actions/setup-node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_ACTIVE_LTS }}
          cache: "npm"
          cache-dependency-path: |
            **/npm-shrinkwrap.json
            **/package-lock.json
      - name: setup subject
        run: npm ci --ignore-scripts
      - name: build
        run: npm run build
      - name: artifact build result
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DIST_DIR }}
          path: ${{ env.DIST_DIR }}
          if-no-files-found: error
      - name: pack
        run: |
          mkdir -p "${PACK_DIR}"
          npm pack --pack-destination "${PACK_DIR}" .
          ls -lisah "${PACK_DIR}" # DEBUG INFO
          mv "${PACK_DIR}"/cyclonedx-cyclonedx-npm*.tgz "${PACK_DIR}"/build-result.tgz
      - name: artifact pack result
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PACK_DIR }}
          path: ${{ env.PACK_DIR }}
          if-no-files-found: error
  test-standards:
    name: test standards
    timeout-minutes: 30
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v3
      - name: Setup Node.js ${{ env.NODE_ACTIVE_LTS }}
        # see https://github.com/actions/setup-node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_ACTIVE_LTS }}
          cache: "npm"
          cache-dependency-path: |
            **/npm-shrinkwrap.json
            **/package-lock.json
      - name: install subject
        run: npm ci
      - name: run tests
        run: npm run test:standard
  test-jest:
    needs: [ 'build' ]
    name: jest (node${{ matrix.node-version }} ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node-version:
          ## action based on https://github.com/actions/node-versions/releases
          ## see also: https://nodejs.org/en/about/releases/
          - "18"      # current
          - "16"      # active LTS
          - "16.0.0"  # lowest supported
        os:
          - ubuntu-latest
          #- macos-latest
          #- windows-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        # see https://github.com/actions/setup-node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: |
            **/npm-shrinkwrap.json
            **/package-lock.json
      - name: setup subject
        run: npm ci --ignore-scripts
      - name: fetch build artifact
        # see https://github.com/actions/download-artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.DIST_DIR }}
          path: ${{ env.DIST_DIR }}
      - name: test
        run: npm run test:jest
      - name: artifact test reports
        if: ${{ failure() }}
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: reports-jest-node${{ matrix.node-version }}-${{ matrix.os }}
          path: reports
          if-no-files-found: error
  test-reproducible-demo:
    needs: [ 'build' ]
    name: demo ${{ matrix.subject }} ${{ matrix.spec-version }} ${{ matrix.output-format }} (npm${{ matrix.npm-version }} node${{ matrix.node-version }} ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        subject:
          # - bundled-dependencies
          - juice-shop
          #- local-dependencies
          #- local-workspaces
        spec-version:
          - "1.4"
          ## no need to test all. the serialization is not in our domain
          # - "1.3"
          # - "1.2"
        output-format:
          - json
          - xml
        npm-version:
          ## THIS IS THE MAIN TARGET OF THE DEMO: test/integrate with alternative versions of npm
          - "8"      # current
          #- "7"      # legacy # TODO reenable
          #- "6"      # legacy
        node-version:
          ## action based on https://github.com/actions/node-versions/releases
          ## see also: https://nodejs.org/en/about/releases/
          - "18"      # current
          # - "16"      # active LTS # TODO reenable
        os:
          # - ubuntu-latest # TODO reenable
          # - macos-latest
          - windows-latest
    timeout-minutes: 30
    env:
      DEMO_ROOT_DIR: demo
      REPORTS_ARTIFACT: demo-reproducible
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v3
      - name: additional env vars
        run: |
          echo 'COMPARE_FILE_PATH=results/bom-${{ matrix.spec-version }}.${{ matrix.output-format }}' >> $GITHUB_ENV
          echo 'OUT_FILE_PATH=${{ env.REPORTS_DIR }}/bom-${{ matrix.spec-version }}-npm${{ matrix.npm-version }}-node${{ matrix.node-version }}-${{ matrix.os }}.${{ matrix.output-format }}' >> $GITHUB_ENV
          mkdir -p '${{ env.REPORTS_DIR }}'
        working-directory: ${{ env.DEMO_ROOT_DIR}}/${{ matrix.subject }}
        shell: bash # don't want to write tht code twice
      - name: Setup Node.js ${{ matrix.node-version }}
        # see https://github.com/actions/setup-node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: |
            **/npm-shrinkwrap.json
            **/package-lock.json
      - name: install required npm
        run: npm install -g 'npm@${{ matrix.npm-version }}'
      - name: report versions
        run: |
          node --version
          npm  --version
      - name: fetch build artifact
        # see https://github.com/actions/download-artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.PACK_DIR }}
          path: ${{ env.PACK_DIR }}
      - name: install build result
        run: npm i -g build-result.tgz
        working-directory: ${{ env.PACK_DIR }}
      # - name: show help and version
      #  run: |
      #    cyclonedx-npm --help
      #    cyclonedx-npm --version
      - name: setup reproducible demo
        run: npm ci
        working-directory: ${{ env.DEMO_ROOT_DIR}}/${{ matrix.subject }}/project
      - name: run reproducible demo
        run: >
          cyclonedx-npm
          --spec-version '${{ matrix.spec-version}}'
          --output-reproducible
          --output-format '${{ matrix.output-format }}'
          --output-file '${{ env.OUT_FILE_PATH }}'
          project/package.json
        working-directory: ${{ env.DEMO_ROOT_DIR}}/${{ matrix.subject }}
      - name: debug npm-ls
        if: ${{ failure() }}
        run: >
          npm --prefix project
          ls --all --long
          2> ${{ env.OUT_FILE_PATH }}.failed-debug.err.log
          >  ${{ env.OUT_FILE_PATH }}.failed-debug.out.log
        working-directory: ${{ env.DEMO_ROOT_DIR}}/${{ matrix.subject }}
      - name: diff
        if: ${{ success() }}
        run: >
          diff -s
          "$COMPARE_FILE_PATH"
          "$OUT_FILE_PATH"
        working-directory: ${{ env.DEMO_ROOT_DIR}}/${{ matrix.subject }}
        shell: bash # don't want to write tht code twice
      - name: Artifact reports
        if: ${{ failure() }}
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.REPORTS_ARTIFACT }}-${{ matrix.subject }}-failed
          path: ${{ env.DEMO_ROOT_DIR}}/${{ matrix.subject }}/${{ env.REPORTS_DIR }}
          if-no-files-found: error
      - name: uninstall subject
        # purpose: remove it from caches
        run: npm uninstall -g @cyclonedx/cyclonedx-npm
        if: ${{ always() }}
